#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

bool isPrime(int num) {
    if (num <= 1) return false;
    for (int i = 2; i <= sqrt(num); ++i) {
        if (num % i == 0) return false;
    }
    return true;
}

vector<int> rearrangeArray(vector<int>& arr) {
    vector<int> primes;
    vector<int> nonPrimes;

    for (int num : arr) {
        if (isPrime(num)) {
            primes.push_back(num);
        } else {
            nonPrimes.push_back(num);
        }
    }

    if (primes.empty()) {
        sort(arr.begin(), arr.end(), greater<int>());
        return arr;
    }

    sort(primes.begin(), primes.end(), greater<int>());
    sort(nonPrimes.begin(), nonPrimes.end(), greater<int>());

    vector<int> result;
    result.push_back(primes.front());
    result.insert(result.end(), nonPrimes.begin(), nonPrimes.end());
    result.push_back(primes.back());

    return result;
}

int main() {
    cout << "Enter the size of the array: ";
    int n;
    cin >> n;

    vector<int> arr(n);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    vector<int> res = rearrangeArray(arr);
    cout << "Rearranged array: ";
    for (int num : res) {
        cout << num << " ";
    }
    cout << '\n';

    return 0;
}
