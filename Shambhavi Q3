// EmplyeeList
import React from 'react';
import styles from '../EmployeeList.module.css';

const EmployeeList = ({ employees }) => {
  return (
    <div className={styles.gridContainer}>
      {employees.length === 0 ? (
        <p>No employees found.</p>
      ) : (
        employees.map((employee) => (
          <div className={styles.card} key={employee.id}>
            <h3>{employee.name}</h3>
            <p>Email: {employee.email}</p>
          </div>
        ))
      )}
    </div>
  );
};

export default EmployeeList;


//RegistrationForm
import React, { useState } from 'react';
import ApiService from '../services/ApiService';
import styles from '../RegistrationForm.module.css';

const RegistrationForm = () => {
  const [formData, setFormData] = useState({ name: '', email: '' });
  const [responseMessage, setResponseMessage] = useState('');

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const response = await ApiService.registerEmployee(formData);
    setResponseMessage(response ? 'Employee registered successfully!' : 'Failed to register employee.');
    setFormData({ name: '', email: '' });
  };
  return (
    <form className={styles.form} onSubmit={handleSubmit}>
      <div className={styles.inputGroup}>
        <label htmlFor="name">Name:</label>
        <input
          type="text"
          id="name"
          name="name"
          value={formData.name}
          onChange={handleChange}
          required
        />
      </div>
      <div className={styles.inputGroup}>
        <label htmlFor="email">Email:</label>
        <input
          type="email"
          id="email"
          name="email"
          value={formData.email}
          onChange={handleChange}
          required
        />
      </div>
      <button type="submit" className={styles.submitButton}>Register</button>
      {responseMessage && <p className={styles.responseMessage}>{responseMessage}</p>}
    </form>
  );
};
export default RegistrationForm;

//ApiService
class ApiService {
    static async registerEmployee(employeeData) {
      try {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(employeeData),
        });
        return response.ok;
      } catch (error) {
        console.error('Error registering employee:', error);
        return false;
      }
    }
    static async getEmployees() {
        try {
          const response = await fetch('https://jsonplaceholder.typicode.com/users');
          if (response.ok) {
            return await response.json();
          }
          return [];
        } catch (error) {
          console.error('Error fetching employees:', error);
          return [];
        }
      }
    }
    
    export default ApiService;  

//App.module.css
.container {
    font-family: Arial, sans-serif;
    padding: 20px;
  }

//RegistrationForm.module.css
.form {
    margin-bottom: 20px;
    border: 1px solid #ddd;
    padding: 15px;
    border-radius: 8px;
    background-color: #f9f9f9;
  }
  .inputGroup {
    margin-bottom: 15px;
  }
  label {
    display: block;
    font-weight: bold;
  }
  input {
    width: 100%;
    padding: 8px;
    margin-top: 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  .submitButton {
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 10px 15px;
    cursor: pointer;
    border-radius: 4px
}
.responseMessage {
  margin-top: 10px;
  color: green;
}

//EmployeeList.module.css
.gridContainer {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 20px;
  }
  .card {
    border: 1px solid #ddd;
    padding: 15px;
    word-wrap: none;
    background-color: rgb(140, 80, 8);
    border-radius: 8px;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
  h3 {
    margin: 0 0 10px;
  }
